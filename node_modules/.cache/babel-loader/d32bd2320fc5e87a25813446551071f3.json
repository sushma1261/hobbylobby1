{"ast":null,"code":"var _jsxFileName = \"/Users/nagu/Desktop/ReactApp/hobbylobby/src/Groups/GroupsDetailDisplay.jsx\";\nimport React from 'react';\nimport { Header, Grid, Image, Button, Icon } from 'semantic-ui-react';\nimport firebase from '../Firebase';\n\nclass GroupsDetailDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataBase = async () => {\n      console.log(\"aaaa\");\n      var categorySelected = this.state.name;\n      var x = {};\n      var query = firebase.database().ref().child(\"groups\");\n      await query.once(\"value\").then(function (snapshot) {\n        console.log(\"**&*&*&*&*\");\n        console.log(snapshot);\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n          var group = childSnapshot.val().name;\n          var mem = childSnapshot.val().Members.id;\n          console.log(mem);\n\n          if (group === categorySelected) {\n            var description = childSnapshot.val().description;\n            x = {\n              \"name\": group,\n              \"description\": description,\n              \"photo\": childSnapshot.val().photo\n            };\n          }\n        });\n      });\n      console.log(x);\n      this.setState({\n        categorySelected: x\n      });\n    };\n\n    var path = this.props.location.pathname;\n    var str = path.substring(12);\n    this.state = {\n      name: str,\n      categorySelected: {}\n    };\n    console.log(str);\n  }\n\n  componentWillMount() {\n    this.dataBase();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      floated: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.name)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.categorySelected.description)), React.createElement(Grid.Column, {\n      width: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: photo,\n      alt: \"image\",\n      width: \"200\",\n      height: \"200\",\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      position: \"center\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"Join Group\"))));\n  }\n\n}\n\nexport default GroupsDetailDisplay;","map":{"version":3,"sources":["/Users/nagu/Desktop/ReactApp/hobbylobby/src/Groups/GroupsDetailDisplay.jsx"],"names":["React","Header","Grid","Image","Button","Icon","firebase","GroupsDetailDisplay","Component","constructor","props","dataBase","console","log","categorySelected","state","name","x","query","database","ref","child","once","then","snapshot","forEach","childSnapshot","key","group","val","mem","Members","id","description","photo","setState","path","location","pathname","str","substring","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Header, Grid, Image, Button, Icon} from 'semantic-ui-react';\nimport firebase from '../Firebase';\n\nclass GroupsDetailDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        var path = this.props.location.pathname;\n        var str = path.substring(12);\n        this.state = {name: str, categorySelected: {}};\n        console.log(str);\n        }\n        dataBase = async() => {\n            console.log(\"aaaa\");\n            var categorySelected = this.state.name;\n            var x = {};\n              var  query = firebase.database().ref().child(\"groups\");\n              await query.once(\"value\")\n                .then(function(snapshot) {\n                    console.log(\"**&*&*&*&*\");\n                    console.log(snapshot);\n                  snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key;\n                    var group = childSnapshot.val().name;\n                    var mem = childSnapshot.val().Members.id;\n                    console.log(mem);\n                    if (group === categorySelected) {\n                        var description = childSnapshot.val().description;\n                        x = {\"name\" : group, \"description\": description, \"photo\" : childSnapshot.val().photo};\n                    }\n                });\n              });\n              console.log(x);\n              this.setState({categorySelected : x});\n            }\n    \n            componentWillMount() {\n                this.dataBase();\n            }\n    render() {\n        return (\n            <div>\n            <Grid>\n                    <Grid.Row></Grid.Row>\n                    <Grid.Row><Header as = \"h1\" floated = \"center\">{this.state.name}</Header></Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={13}>\n                            <Header as = \"h4\" floated = \"left\">{this.state.categorySelected.description}</Header>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Image src = {photo} alt = \"image\" width = \"200\" height = \"200\" floated = \"right\"/>\n                        </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                        <Button position = \"center\" primary><Icon name = 'add'/>Join Group</Button>\n                    </Grid.Row>\n                </Grid>\n                \n            </div>\n        );\n    }\n}\n\nexport default GroupsDetailDisplay;"]},"metadata":{},"sourceType":"module"}