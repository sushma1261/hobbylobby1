{"ast":null,"code":"var _jsxFileName = \"/Users/nagu/Desktop/hobbylobby/src/Groups/GroupsDetailDisplay.jsx\";\nimport React from 'react';\nimport { Header, Grid, Image, Button, Icon } from 'semantic-ui-react';\nimport firebase from '../Firebase';\nimport photo from '../images/dance.jpeg';\nimport MembersDisplay from '../Groups/Members/MembersDisplay';\nimport { async } from 'q';\n\nclass GroupsDetailDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataBase = async () => {\n      console.log(\"aaaa\");\n      var categorySelected = this.state.name;\n      var x = {};\n      var groupName = \"\";\n      var username = [];\n      var existingUser = false;\n      var query = firebase.database().ref().child(\"groups\");\n      await query.once(\"value\").then(function (snapshot) {\n        console.log(\"**&*&*&*&*\");\n        console.log(snapshot);\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n          var group = childSnapshot.val().name; //console.log(key);\n\n          if (group === categorySelected) {\n            var description = childSnapshot.val().description;\n            x = {\n              \"name\": group,\n              \"description\": description,\n              \"photo\": childSnapshot.val().photo\n            };\n            var mem = childSnapshot.val().members;\n            console.log(\"Members:\");\n            console.log(mem);\n            groupName = key;\n\n            for (var m in mem) {\n              if (mem[m].username == localStorage.getItem(\"uname\")) {\n                existingUser = true;\n              }\n\n              username.push(mem[m].username);\n            }\n          }\n        });\n      });\n      console.log(x);\n      this.setState({\n        categorySelected: x,\n        mem: username,\n        groupName: groupName,\n        existingUser\n      });\n      this.displayMembers();\n    };\n\n    this.addMember = async () => {\n      console.log(localStorage.getItem(\"uname\"));\n      var query1 = firebase.database().ref(\"groups\").child(this.state.groupName).child(\"members\");\n      query1.push({\n        username: localStorage.getItem(\"uname\")\n      });\n    };\n\n    var path = this.props.location.pathname;\n    var str = path.substring(12);\n    this.state = {\n      name: str,\n      categorySelected: {},\n      mem: [],\n      groupName: \"\",\n      existingUser: false\n    };\n    console.log(str);\n  }\n\n  displayMembers() {\n    var mem = this.state.mem; //console.log(\"hh\");\n\n    for (var i = 0; i < mem.length; i++) {\n      console.log(mem[i]);\n    }\n  }\n\n  componentWillMount() {\n    this.dataBase();\n  }\n\n  render() {\n    const data = this.state.mem.map(d => {\n      {\n        this.dataBase.bind(this);\n      }\n      console.log(d);\n      return React.createElement(MembersDisplay, {\n        username: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      floated: \"center\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.name)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      floated: \"left\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.categorySelected.description)), React.createElement(Grid.Column, {\n      width: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: photo,\n      alt: \"image\",\n      width: \"200\",\n      height: \"200\",\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), !this.state.existingUser && React.createElement(Button, {\n      primary: true,\n      onClick: this.addMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"disabled users icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Join group\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      position: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Members\"), data)));\n  }\n\n}\n\nexport default GroupsDetailDisplay;","map":{"version":3,"sources":["/Users/nagu/Desktop/hobbylobby/src/Groups/GroupsDetailDisplay.jsx"],"names":["React","Header","Grid","Image","Button","Icon","firebase","photo","MembersDisplay","async","GroupsDetailDisplay","Component","constructor","props","dataBase","console","log","categorySelected","state","name","x","groupName","username","existingUser","query","database","ref","child","once","then","snapshot","forEach","childSnapshot","key","group","val","description","mem","members","m","localStorage","getItem","push","setState","displayMembers","addMember","query1","path","location","pathname","str","substring","i","length","componentWillMount","render","data","map","d","bind","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAgD,mBAAhD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,KAAT,QAAsB,GAAtB;;AACA,MAAMC,mBAAN,SAAkCV,KAAK,CAACW,SAAxC,CAAkD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOfC,QAPe,GAOJ,YAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,IAAlC;AACA,UAAIC,CAAC,GAAG,EAAR;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,YAAY,GAAG,KAAnB;AACE,UAAKC,KAAK,GAAGlB,QAAQ,CAACmB,QAAT,GAAoBC,GAApB,GAA0BC,KAA1B,CAAgC,QAAhC,CAAb;AACA,YAAMH,KAAK,CAACI,IAAN,CAAW,OAAX,EACHC,IADG,CACE,UAASC,QAAT,EAAmB;AACrBf,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACFA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAASC,aAAT,EAAwB;AACvC,cAAIC,GAAG,GAAGD,aAAa,CAACC,GAAxB;AACA,cAAIC,KAAK,GAAGF,aAAa,CAACG,GAAd,GAAoBhB,IAAhC,CAFuC,CAGvC;;AACA,cAAIe,KAAK,KAAKjB,gBAAd,EAAgC;AAC5B,gBAAImB,WAAW,GAAGJ,aAAa,CAACG,GAAd,GAAoBC,WAAtC;AACAhB,YAAAA,CAAC,GAAG;AAAC,sBAASc,KAAV;AAAiB,6BAAeE,WAAhC;AAA6C,uBAAUJ,aAAa,CAACG,GAAd,GAAoB5B;AAA3E,aAAJ;AACA,gBAAI8B,GAAG,GAAGL,aAAa,CAACG,GAAd,GAAoBG,OAA9B;AACAvB,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ;AACAhB,YAAAA,SAAS,GAAGY,GAAZ;;AACA,iBAAI,IAAIM,CAAR,IAAaF,GAAb,EAAkB;AACd,kBAAIA,GAAG,CAACE,CAAD,CAAH,CAAOjB,QAAP,IAAmBkB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB,EAAsD;AAClDlB,gBAAAA,YAAY,GAAG,IAAf;AACH;;AACDD,cAAAA,QAAQ,CAACoB,IAAT,CAAcL,GAAG,CAACE,CAAD,CAAH,CAAOjB,QAArB;AACH;AAEJ;AACJ,SAnBC;AAoBH,OAxBK,CAAN;AAyBAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,WAAKuB,QAAL,CAAc;AAAC1B,QAAAA,gBAAgB,EAAGG,CAApB;AAAuBiB,QAAAA,GAAG,EAAGf,QAA7B;AAAuCD,QAAAA,SAAS,EAAGA,SAAnD;AAA8DE,QAAAA;AAA9D,OAAd;AACA,WAAKqB,cAAL;AACD,KA3CU;;AAAA,SAoDXC,SApDW,GAoDC,YAAW;AACnB9B,MAAAA,OAAO,CAACC,GAAR,CAAYwB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAKK,MAAM,GAAGxC,QAAQ,CAACmB,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwC,KAAKT,KAAL,CAAWG,SAAnD,EAA8DM,KAA9D,CAAoE,SAApE,CAAd;AACAmB,MAAAA,MAAM,CAACJ,IAAP,CAAY;AAACpB,QAAAA,QAAQ,EAACkB,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAV,OAAZ;AACH,KAxDU;;AAEf,QAAIM,IAAI,GAAG,KAAKlC,KAAL,CAAWmC,QAAX,CAAoBC,QAA/B;AACA,QAAIC,GAAG,GAAGH,IAAI,CAACI,SAAL,CAAe,EAAf,CAAV;AACA,SAAKjC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE+B,GAAP;AAAYjC,MAAAA,gBAAgB,EAAE,EAA9B;AAAkCoB,MAAAA,GAAG,EAAE,EAAvC;AAA2ChB,MAAAA,SAAS,EAAG,EAAvD;AAA2DE,MAAAA,YAAY,EAAG;AAA1E,KAAb;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYkC,GAAZ;AACC;;AAuCGN,EAAAA,cAAc,GAAG;AACb,QAAIP,GAAG,GAAG,KAAKnB,KAAL,CAAWmB,GAArB,CADa,CAEb;;AACA,SAAI,IAAIe,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,GAAG,CAACgB,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChCrC,MAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACe,CAAD,CAAf;AACH;AACJ;;AAMDE,EAAAA,kBAAkB,GAAG;AACjB,SAAKxC,QAAL;AAEH;;AACTyC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKtC,KAAL,CAAWmB,GAAX,CAAeoB,GAAf,CAAqBC,CAAD,IAAO;AACpC;AAAC,aAAK5C,QAAL,CAAc6C,IAAd,CAAmB,IAAnB;AAAyB;AAC1B5C,MAAAA,OAAO,CAACC,GAAR,CAAY0C,CAAZ;AACA,aAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAIA,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAJU,CAAb;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAIQ,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAG,IAAb;AAAkB,MAAA,OAAO,EAAG,QAA5B;AAAqC,MAAA,KAAK,EAAI;AAACE,QAAAA,KAAK,EAAE;AAAR,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkE,KAAK1C,KAAL,CAAWC,IAA7E,CAAV,CAJR,EAKQ,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAG,IAAb;AAAkB,MAAA,OAAO,EAAG,MAA5B;AAAmC,MAAA,KAAK,EAAI;AAACyC,QAAAA,KAAK,EAAE;AAAR,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgE,KAAK1C,KAAL,CAAWD,gBAAX,CAA4BmB,WAA5F,CADJ,CADJ,EAII,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAI7B,KAAd;AAAqB,MAAA,GAAG,EAAG,OAA3B;AAAmC,MAAA,KAAK,EAAG,KAA3C;AAAiD,MAAA,MAAM,EAAG,KAA1D;AAAgE,MAAA,OAAO,EAAG,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,CAAC,KAAKW,KAAL,CAAWK,YAAZ,IACD,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAI,KAAKsB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C;AAAG,MAAA,KAAK,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C,eAHJ,CAJJ,CALR,EAkBY,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBZ,EAqBQ;AAAK,MAAA,QAAQ,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAG,IAAb;AAAkB,MAAA,KAAK,EAAI;AAACe,QAAAA,KAAK,EAAG;AAAT,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,EAEKJ,IAFL,CArBR,CADA,CADJ;AAgCH;;AAtG6C;;AAyGlD,eAAe9C,mBAAf","sourcesContent":["import React from 'react';\nimport {Header, Grid, Image, Button, Icon} from 'semantic-ui-react';\nimport firebase from '../Firebase';\nimport photo from '../images/dance.jpeg';\nimport MembersDisplay from '../Groups/Members/MembersDisplay';\nimport { async } from 'q';\nclass GroupsDetailDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        var path = this.props.location.pathname;\n        var str = path.substring(12);\n        this.state = {name: str, categorySelected: {}, mem: [], groupName : \"\", existingUser : false};\n        console.log(str);\n        }\n        dataBase = async() => {\n            console.log(\"aaaa\");\n            var categorySelected = this.state.name;\n            var x = {};\n            var groupName = \"\";\n            var username = [];\n            var existingUser = false;\n              var  query = firebase.database().ref().child(\"groups\");\n              await query.once(\"value\")\n                .then(function(snapshot) {\n                    console.log(\"**&*&*&*&*\");\n                    console.log(snapshot);\n                  snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key;\n                    var group = childSnapshot.val().name;\n                    //console.log(key);\n                    if (group === categorySelected) {\n                        var description = childSnapshot.val().description;\n                        x = {\"name\" : group, \"description\": description, \"photo\" : childSnapshot.val().photo};\n                        var mem = childSnapshot.val().members;\n                        console.log(\"Members:\");\n                        console.log(mem);\n                        groupName = key;\n                        for(var m in mem) {\n                            if( mem[m].username == localStorage.getItem(\"uname\")) {\n                                existingUser = true;\n                            }\n                            username.push(mem[m].username);\n                        }\n                        \n                    }\n                });\n              });\n              console.log(x);\n              this.setState({categorySelected : x, mem : username, groupName : groupName, existingUser});\n              this.displayMembers();\n            }\n    \n            displayMembers() {\n                var mem = this.state.mem;\n                //console.log(\"hh\");\n                for(var i = 0; i < mem.length; i++) {\n                    console.log(mem[i]);\n                }\n            }\n            addMember = async() => {\n                console.log(localStorage.getItem(\"uname\"));\n                var  query1 = firebase.database().ref(\"groups\").child(this.state.groupName).child(\"members\");\n                query1.push({username:localStorage.getItem(\"uname\")});\n            }\n            componentWillMount() {\n                this.dataBase();\n                \n            }\n    render() {\n        const data = this.state.mem.map( (d) => {\n            {this.dataBase.bind(this)}\n            console.log(d);\n            return <MembersDisplay username = {d}/>;\n          });\n\n        return (\n            <div>\n            <Grid>\n                    <Grid.Row>\n                        \n                    </Grid.Row>\n                    <Grid.Row><Header as = \"h1\" floated = \"center\" style = {{color: \"white\" }}>{this.state.name}</Header></Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={13}>\n                            <Header as = \"h3\" floated = \"left\" style = {{color: \"white\" }}>{this.state.categorySelected.description}</Header>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Image src = {photo} alt = \"image\" width = \"200\" height = \"200\" floated = \"right\"/>\n                            {!this.state.existingUser && \n                            <Button primary onClick = {this.addMember}><i class=\"disabled users icon\"></i>Join group</Button>\n                            }\n                            {/* <Button primary><i class=\"disabled users icon\"></i>Join group</Button> */}\n                        </Grid.Column>\n                        </Grid.Row>\n                        \n                        <Grid.Row>\n                        \n                    </Grid.Row>\n                    <div position = \"left\">\n                <Header as = \"h1\" style = {{color : \"white\"}}>Members</Header>\n                        {data}\n                </div>\n                </Grid>\n                \n                \n            </div>\n        );\n    }\n}\n\nexport default GroupsDetailDisplay;"]},"metadata":{},"sourceType":"module"}